# Configuration principale application.yml - VERSION CORRIGÉE
spring:
  application:
    name: retrouvtout-backend

  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}

  # Configuration base de données MariaDB
  datasource:
    url: ${DB_URL:jdbc:mariadb://localhost:3306/retrouvtout_dev?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true&characterEncoding=utf8mb4&useUnicode=true}
    username: ${DB_USERNAME:retrouvtout}
    password: ${DB_PASSWORD:password123}
    driver-class-name: org.mariadb.jdbc.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      idle-timeout: 300000
      connection-timeout: 20000
      max-lifetime: 1200000
      connection-test-query: SELECT 1

  # Configuration JPA/Hibernate
  jpa:
    database-platform: org.hibernate.dialect.MariaDBDialect
    hibernate:
      ddl-auto: ${JPA_DDL_AUTO:update}
    show-sql: ${JPA_SHOW_SQL:false}
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MariaDBDialect
        format_sql: true
        use_sql_comments: false
        jdbc:
          time_zone: UTC
          batch_size: 25
        order_inserts: true
        order_updates: true
        batch_versioned_data: true
        connection:
          provider_disables_autocommit: true
        cache:
          use_second_level_cache: false
          use_query_cache: false
    open-in-view: false

  # Configuration Flyway (désactivé par défaut)
  flyway:
    enabled: ${FLYWAY_ENABLED:false}

  # Configuration Redis (optionnelle)
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      database: 0
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
          max-wait: -1ms

  # Configuration cache
  cache:
    type: ${CACHE_TYPE:simple}

  # Configuration email
  mail:
    host: ${MAIL_HOST:localhost}
    port: ${MAIL_PORT:1025}
    username: ${MAIL_USERNAME:}
    password: ${MAIL_PASSWORD:}
    properties:
      mail:
        smtp:
          auth: ${MAIL_SMTP_AUTH:false}
          starttls:
            enable: ${MAIL_SMTP_STARTTLS:false}
          connectiontimeout: 5000
          timeout: 3000
          writetimeout: 5000
    default-encoding: UTF-8

  # Configuration multipart (upload fichiers)
  servlet:
    multipart:
      enabled: true
      max-file-size: 10MB
      max-request-size: 15MB
      location: ${java.io.tmpdir}

  # Configuration Jackson
  jackson:
    serialization:
      write-dates-as-timestamps: false
      fail-on-empty-beans: false
    deserialization:
      fail-on-unknown-properties: false
    default-property-inclusion: NON_NULL
    time-zone: UTC

  # Configuration SQL
  sql:
    init:
      mode: never

# Configuration serveur
server:
  port: ${SERVER_PORT:8081}
  error:
    include-message: always
    include-binding-errors: always
    include-stacktrace: ${ERROR_INCLUDE_STACKTRACE:on_param}
    include-exception: false
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/xml,text/plain,application/javascript,text/css
  servlet:
    context-path: ${CONTEXT_PATH:}
    session:
      timeout: 30m

# Configuration logging
logging:
  level:
    root: INFO
    com.retrouvtout: ${LOG_LEVEL_APP:INFO}
    org.springframework.web: ${LOG_LEVEL_WEB:INFO}
    org.springframework.security: ${LOG_LEVEL_SECURITY:INFO}
    org.hibernate.SQL: ${LOG_LEVEL_SQL:INFO}
    org.hibernate.type.descriptor.sql.BasicBinder: ${LOG_LEVEL_SQL_PARAMS:INFO}
    org.mariadb.jdbc: INFO
  pattern:
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
    console: "%clr(%d{HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}"
  file:
    name: ${LOG_FILE:logs/retrouvtout.log}
    max-size: 10MB
    max-history: 10

# Configuration Management/Actuator
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,env
      base-path: /actuator
  endpoint:
    health:
      show-details: ${ACTUATOR_HEALTH_DETAILS:when_authorized}
      show-components: always
    info:
      enabled: true
    env:
      enabled: ${ACTUATOR_ENV_ENABLED:false}
  info:
    env:
      enabled: true
    build:
      enabled: true

# Configuration OpenAPI/Swagger
springdoc:
  api-docs:
    path: /api-docs
    enabled: ${SWAGGER_ENABLED:true}
  swagger-ui:
    path: /swagger-ui.html
    enabled: ${SWAGGER_UI_ENABLED:true}
    operations-sorter: method
    tags-sorter: alpha
    try-it-out-enabled: true
    display-request-duration: true
    doc-expansion: none
    default-model-expand-depth: 3
  show-actuator: ${SWAGGER_SHOW_ACTUATOR:false}
  packages-to-scan: com.retrouvtout.controller

# Configuration application spécifique
app:
  # Configuration frontend
  frontend:
    url: ${FRONTEND_URL:http://localhost:8080}

  # Configuration JWT
  jwt:
    secret: ${JWT_SECRET:dev-secret-key-change-this-in-production-with-a-very-long-and-secure-secret}
    expiration: ${JWT_EXPIRATION:86400000} # 24 heures
    refresh-expiration: ${JWT_REFRESH_EXPIRATION:604800000} # 7 jours

  # Configuration CORS
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:8080,http://localhost:3000,http://localhost:5173,http://127.0.0.1:8080,http://127.0.0.1:3000,http://127.0.0.1:5173}
    allowed-methods: ${CORS_ALLOWED_METHODS:GET,POST,PUT,DELETE,PATCH,OPTIONS,HEAD}
    allowed-headers: ${CORS_ALLOWED_HEADERS:*}
    exposed-headers: Authorization,Cache-Control,Content-Type,X-Total-Count,X-Page-Number,X-Page-Size
    allow-credentials: ${CORS_ALLOW_CREDENTIALS:true}
    max-age: ${CORS_MAX_AGE:3600}

  # Configuration upload
  upload:
    dir: ${UPLOAD_DIR:./uploads}
    max-file-size: ${UPLOAD_MAX_FILE_SIZE:10485760} # 10MB
    allowed-extensions: ${UPLOAD_ALLOWED_EXTENSIONS:jpg,jpeg,png,gif,webp}

  # Configuration notifications
  notifications:
    email:
      enabled: ${EMAIL_NOTIFICATIONS_ENABLED:false}
      from: ${EMAIL_FROM:noreply@retrouvtout.com}
      from-name: ${EMAIL_FROM_NAME:Retrouv'Tout}
    sms:
      enabled: ${SMS_NOTIFICATIONS_ENABLED:false}
      twilio:
        account-sid: ${TWILIO_ACCOUNT_SID:}
        auth-token: ${TWILIO_AUTH_TOKEN:}
        from-number: ${TWILIO_FROM_NUMBER:}
    push:
      enabled: ${PUSH_NOTIFICATIONS_ENABLED:false}
      vapid-public-key: ${VAPID_PUBLIC_KEY:}
      vapid-private-key: ${VAPID_PRIVATE_KEY:}

  # Configuration modération
  moderation:
    auto-approve: ${AUTO_APPROVE_LISTINGS:true}
    max-listings-per-day: ${MAX_LISTINGS_PER_DAY:10}
    profanity-filter: ${PROFANITY_FILTER_ENABLED:false}

  # Configuration géolocalisation
  geocoding:
    enabled: ${GEOCODING_ENABLED:false}
    provider: ${GEOCODING_PROVIDER:nominatim}
    api-key: ${GEOCODING_API_KEY:}

  # Configuration alertes
  alerts:
    max-per-user: ${MAX_ALERTS_PER_USER:20}
    check-interval: ${ALERTS_CHECK_INTERVAL:300000}
    enabled: ${ALERTS_ENABLED:true}

  # Configuration sécurité
  security:
    rate-limit:
      enabled: ${RATE_LIMIT_ENABLED:false}
    password:
      min-length: ${PASSWORD_MIN_LENGTH:8}
      require-special-chars: ${PASSWORD_REQUIRE_SPECIAL:false}

---
# ========================================
# PROFIL DÉVELOPPEMENT
# ========================================
spring:
  config:
    activate:
      on-profile: dev

  # Base de données développement
  datasource:
    url: jdbc:mariadb://localhost:3306/retrouvtout_dev?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true&characterEncoding=utf8mb4&useUnicode=true
    username: retrouvtout
    password: password123

  # JPA développement - Recréer les tables à chaque démarrage
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true

  # Cache simple pour le développement
  cache:
    type: simple

  # Email développement (serveur local)
  mail:
    host: localhost
    port: 1025
    properties:
      mail:
        smtp:
          auth: false
          starttls:
            enable: false

  # DevTools activé
  devtools:
    restart:
      enabled: true
      exclude: static/**,public/**
    livereload:
      enabled: true

# Serveur développement
server:
  error:
    include-stacktrace: on_trace_param

# Logging développement
logging:
  level:
    com.retrouvtout: DEBUG
    org.springframework.web: DEBUG
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  file:
    name: logs/retrouvtout-dev.log

# Actuator développement
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,beans,env,configprops,mappings
  endpoint:
    health:
      show-details: always
    env:
      enabled: true

# Swagger développement
springdoc:
  swagger-ui:
    try-it-out-enabled: true
  show-actuator: true

# Configuration app développement
app:
  frontend:
    url: http://localhost:8080

  jwt:
    secret: dev-secret-key-not-for-production
    expiration: 86400000

  upload:
    dir: ./uploads-dev

  notifications:
    email:
      enabled: false
      from: dev@retrouvtout.com
    sms:
      enabled: false
    push:
      enabled: false

  moderation:
    auto-approve: true
    max-listings-per-day: 100
    profanity-filter: false

  security:
    rate-limit:
      enabled: false

---
# ========================================
# PROFIL TEST
# ========================================
spring:
  config:
    activate:
      on-profile: test

  # Base de données test (H2 en mémoire)
  datasource:
    url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    username: sa
    password:
    driver-class-name: org.h2.Driver

  # JPA test
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create-drop
    show-sql: false

  # Cache test
  cache:
    type: simple

  # H2 Console pour debug
  h2:
    console:
      enabled: true

# Logging test
logging:
  level:
    com.retrouvtout: INFO
    org.springframework: WARN
    org.hibernate: WARN

# Configuration app test
app:
  frontend:
    url: http://localhost:3000

  jwt:
    secret: test-secret-key
    expiration: 3600000 # 1 heure pour les tests

  upload:
    dir: ./test-uploads

  notifications:
    email:
      enabled: false
    sms:
      enabled: false
    push:
      enabled: false

---
# ========================================
# PROFIL PRODUCTION
# ========================================
spring:
  config:
    activate:
      on-profile: prod

  # Base de données production
  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    hikari:
      maximum-pool-size: 50
      minimum-idle: 10

  # JPA production
  jpa:
    hibernate:
      ddl-auto: validate # Pas de modification automatique en prod
    show-sql: false

  # Cache production (Redis)
  cache:
    type: redis
  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD}

  # Email production
  mail:
    host: ${MAIL_HOST}
    port: ${MAIL_PORT:587}
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

  # OAuth2 production
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope:
              - email
              - profile
          facebook:
            client-id: ${FACEBOOK_CLIENT_ID}
            client-secret: ${FACEBOOK_CLIENT_SECRET}
            scope:
              - email
              - public_profile

# Serveur production
server:
  port: ${PORT:8080}
  error:
    include-stacktrace: never
    include-exception: false

# Logging production
logging:
  level:
    root: INFO
    com.retrouvtout: INFO
    org.springframework.security: WARN
    org.hibernate: WARN
  file:
    name: /var/log/retrouvtout/application.log
    max-size: 50MB
    max-history: 30

# Actuator production (sécurisé)
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: never

# Swagger production (désactivé)
springdoc:
  api-docs:
    enabled: false
  swagger-ui:
    enabled: false

# Configuration app production
app:
  frontend:
    url: ${FRONTEND_URL:https://retrouvtout.com}

  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:https://retrouvtout.com}

  upload:
    dir: ${UPLOAD_DIR:/var/app/uploads}

  notifications:
    email:
      enabled: true
    sms:
      enabled: ${SMS_NOTIFICATIONS_ENABLED:true}
    push:
      enabled: ${PUSH_NOTIFICATIONS_ENABLED:true}

  moderation:
    auto-approve: false
    max-listings-per-day: 5
    profanity-filter: true

  geocoding:
    enabled: true

  security:
    rate-limit:
      enabled: true
    password:
      min-length: 12
      require-special-chars: true
